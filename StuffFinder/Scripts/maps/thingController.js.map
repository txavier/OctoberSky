{"version":3,"names":[],"mappings":"","sources":["thingController.js"],"sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    app.controller('thingController', thingController);\r\n\r\n    thingController.$inject = ['$scope', '$location', '$log', '$timeout', '$routeParams', 'authService', 'dataService', 'votesService',\r\n    'me2Service'];\r\n\r\n    function thingController($scope, $location, $log, $timeout, $routeParams, authService, dataService, votesService, me2Service) {\r\n\r\n        var vm = this;\r\n\r\n        vm.thing = {};\r\n        vm.thing.images = [];\r\n        vm.thingId = $routeParams.thingId;\r\n        vm.addOrUpdateThing = addOrUpdateThing;\r\n        vm.deleteThing = deleteThing;\r\n        vm.slideInterval = 5000;\r\n        var slides = vm.slides = [];\r\n        vm.thing.findings = [];\r\n        vm.defaultCoordinates = { latitude: 24.416563, longitude: 54.543546 };\r\n        vm.map = { center: vm.defaultCoordinates, zoom: 12 };\r\n        vm.options = { scrollwheel: false };\r\n        vm.upVote = upVote;\r\n        vm.downVote = downVote;\r\n        vm.sumVotes = sumVotes;\r\n        vm.me2 = me2;\r\n\r\n        // Scope variables have to be accessible for the watch statements.\r\n        $scope.coordsUpdates = 0;\r\n        $scope.dynamicMoveCtr = 0;\r\n        $scope.marker = {};\r\n        $scope.marker.coords = {};\r\n        $scope.marker.options = {};\r\n        $scope.marker.coords.latitude = '';\r\n        $scope.marker.coords.longitude = '';\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            setView();\r\n\r\n            return vm;\r\n        }\r\n\r\n        function me2(thingId) {\r\n            return me2Service.me2(thingId).then(function (data) {\r\n                vm.thing.me2 = data;\r\n            });\r\n        }\r\n\r\n        function setView() {\r\n            return getThing().then(function (data) {\r\n                vm.thing = data;\r\n\r\n                setMapMarker();\r\n\r\n                // Set the carousel.\r\n                addSlide(vm.thing.images);\r\n            })\r\n        }\r\n\r\n        function addSlide(image) {\r\n            if (vm.thing.images.length == 0 && vm.thing.imageUrl) {\r\n                slides.push({ image: vm.thing.imageUrl });\r\n            }\r\n            else if (vm.thing.images.length == 0 && !vm.thing.imageUrl) {\r\n                return;\r\n            }\r\n            else {\r\n                angular.forEach(vm.thing.images, function (image, key) {\r\n                    this.push({ image: \"data:image/jpeg;base64,\" + image.imageBinary });\r\n                }, slides);\r\n            }\r\n        };\r\n\r\n        function getThing() {\r\n            return dataService.getThing(vm.thingId).then(function (data) {\r\n                vm.thing = data;\r\n\r\n                return vm.thing;\r\n            });\r\n        }\r\n\r\n        function addOrUpdateThing() {\r\n            vm.thing.userName = authService.authentication.userName;\r\n\r\n            return dataService.addOrUpdateThing(vm.thing).then(function (data) {\r\n                $scope.$apply();\r\n                history.back();\r\n            });\r\n        }\r\n\r\n        function deleteThing() {\r\n            dataService.deleteThing(vm.thing.thingId).then(function (data) {\r\n                $scope.$apply();\r\n\r\n                history.back();\r\n            });\r\n        }\r\n\r\n        function setMapMarker() {\r\n            $scope.marker = {\r\n                id: 0,\r\n                coords: {\r\n                    latitude: vm.defaultCoordinates.latitude,\r\n                    longitude: vm.defaultCoordinates.longitude\r\n                },\r\n                options: { draggable: false },\r\n                events: {\r\n                    dragend: function (marker, eventName, args) {\r\n                        $log.log('marker dragend');\r\n                        var lat = marker.getPosition().lat();\r\n                        var lon = marker.getPosition().lng();\r\n                        $log.log(lat);\r\n                        $log.log(lon);\r\n\r\n                        $http.get('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + lat + ',' + lon + '&sensor=false&key=AIzaSyBPUGy5syJHUaDeR_E_FTwgOO4Th8vm63Y')\r\n                        .success(function (response) {\r\n                            if (response.status === \"ZERO_RESULTS\") {\r\n                                vm.thing.findings[0].location.latitude = lat;\r\n                                vm.thing.findings[0].location.longitude = lon;\r\n                            }\r\n                            else {\r\n                                vm.thing.findings[0].location.formattedAddress = response.results[0].formatted_address;\r\n                                vm.thing.findings[0].location.latitude = lat;\r\n                                vm.thing.findings[0].location.longitude = lon;\r\n                            }\r\n                        });\r\n\r\n                        $scope.marker.options = {\r\n                            draggable: true,\r\n                            labelContent: \"lat: \" + $scope.marker.coords.latitude + ' ' + 'lon: ' + $scope.marker.coords.longitude,\r\n                            labelAnchor: \"100 0\",\r\n                            labelClass: \"marker-labels\"\r\n                        };\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        $scope.$watchCollection(\"marker.coords\", function (newVal, oldVal) {\r\n            if (_.isEqual(newVal, oldVal))\r\n                return;\r\n            $scope.coordsUpdates++;\r\n        });\r\n\r\n        $timeout(function () {\r\n            //$scope.marker.coords = {\r\n            //    latitude: 42.1451,\r\n            //    longitude: -100.6680\r\n            //};\r\n            $scope.dynamicMoveCtr++;\r\n            $timeout(function () {\r\n                //$scope.marker.coords = {\r\n                //    latitude: 43.1451,\r\n                //    longitude: -102.6680\r\n                //};\r\n                $scope.dynamicMoveCtr++;\r\n            }, 2000);\r\n        }, 1000);\r\n\r\n        function sumVotes(votes) {\r\n            var result = votesService.sumVotes(votes);\r\n\r\n            return result;\r\n        }\r\n\r\n        function upVote(finding) {\r\n            var vote = {};\r\n\r\n            vote.userName = authService.authentication.userName;\r\n            vote.findingId = finding.findingId;\r\n\r\n            return dataService.upVote(vote).then(function (data) {\r\n                getThing();\r\n            });\r\n        }\r\n\r\n        function downVote(finding) {\r\n            var vote = {};\r\n\r\n            vote.userName = authService.authentication.userName;\r\n            vote.findingId = finding.findingId;\r\n\r\n            return dataService.downVote(vote).then(function (data) {\r\n                getThing();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n})();"],"file":"thingController.js","sourceRoot":"/source/"}