{"version":3,"names":[],"mappings":"","sources":["editThingController.js"],"sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    app.controller('editThingController', editThingController);\r\n\r\n    editThingController.$inject = ['$scope', '$location', '$log', '$timeout', '$routeParams', 'authService', 'dataService'];\r\n\r\n    function editThingController($scope, $location, $log, $timeout, $routeParams, authService, dataService) {\r\n\r\n        var vm = this;\r\n\r\n        vm.authentication = {};\r\n        vm.authentication.userName = authService.authentication.userName;\r\n        vm.thing = {};\r\n        vm.thing.categoryId = null;\r\n        vm.categories = [];\r\n        vm.addOrUpdate = addOrUpdate;\r\n        vm.slideInterval = 5000;\r\n        vm.deleteImage = deleteImage;\r\n        var slides = vm.slides = [];\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            getCategories();\r\n            getThing();\r\n            initiateDroplet();\r\n\r\n            return vm;\r\n        }\r\n\r\n        function addSlide(images) {\r\n            if (images.length == 0) {\r\n                return;\r\n            }\r\n            else {\r\n                angular.forEach(images, function (image, key) {\r\n                    this.push({ image: \"data:image/jpeg;base64,\" + image.imageBinary, imageId: image.imageId });\r\n                }, slides);\r\n            }\r\n        };\r\n\r\n        function initiateDroplet() {\r\n            $scope.$on('$dropletReady', function whenDropletReady() {\r\n                vm.interface.allowedExtensions(['png', 'jpg', 'bmp', 'gif']);\r\n\r\n                uploadFiles();\r\n            });\r\n        }\r\n\r\n        function uploadFiles() {\r\n            return dataService.getServerUrl().then(function (resource) {\r\n                var serverUrl = resource;\r\n\r\n                vm.interface.setRequestUrl(serverUrl.resourceServerUrl + 'api/thingsApi' + '/files');\r\n            });\r\n        }\r\n\r\n        function getCategories() {\r\n            return dataService.getCategories().then(function (data) {\r\n                vm.categories = data;\r\n\r\n                return vm.categories;\r\n            });\r\n        }\r\n\r\n        function getThing() {\r\n            return dataService.getThing($routeParams.thingId).then(function (data) {\r\n                vm.thing = data;\r\n\r\n                addSlide(vm.thing.images);\r\n\r\n                getCategories().then(function (data) {\r\n                    if (vm.thing.categoryId) {\r\n                        vm.thing.category = vm.categories[vm.categories.getIndexBy(\"categoryId\", vm.thing.categoryId)];\r\n                    }\r\n                });\r\n\r\n                return vm.thing;\r\n            });\r\n        }\r\n\r\n        Array.prototype.getIndexBy = function (name, value) {\r\n            for (var i = 0; i < this.length; i++) {\r\n                if (this[i][name] == value) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n\r\n        function deleteImage(imageId) {\r\n            return dataService.deleteImage(imageId).then(function (data) {\r\n                $log.log(\"Image deletion successful\");\r\n\r\n                getThing();\r\n            });\r\n        }\r\n\r\n        function addOrUpdate() {\r\n            dataService.addOrUpdateThing(vm.thing)\r\n                .then(function (data) {\r\n                    vm.interface.setPostData({ id: data.thingId, userName: authService.authentication.userName });\r\n\r\n                    vm.interface.uploadFiles();\r\n\r\n                    $scope.$apply();\r\n\r\n                    history.back();\r\n                })\r\n                .catch(handleFailure);\r\n        }\r\n\r\n        function handleFailure(error) {\r\n            $log.error('Failure notice.' + error.data.message + ': ' + error.data.messageDetail);\r\n        }\r\n\r\n    }\r\n})();"],"file":"editThingController.js","sourceRoot":"/source/"}