{"version":3,"names":[],"mappings":"","sources":["dataService.js"],"sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    app.factory('dataService', dataService);\r\n\r\n    dataService.$inject = ['$http', '$log', '$resource', '$q'];\r\n\r\n    function dataService($http, $log, $resource, $q) {\r\n        var deferred = $q.defer();\r\n\r\n        var serverUrl = {\r\n            resourceServerUrl: '',\r\n            authenticationServerUrl: ''\r\n        };\r\n\r\n        var votesApiUrl = 'api/votesApi';\r\n        var categoriesApiUrl = 'api/categoriesApi';\r\n        var citiesApiUrl = 'api/citiesApi';\r\n        var nationalitiesApiUrl = 'api/nationalitiesApi';\r\n        var newslettersApiUrl = 'api/newslettersApi';\r\n        var usersApiUrl = 'api/usersApi';\r\n        var locationsApiUrl = 'api/locationsApi';\r\n        var thingsApiUrl = 'api/thingsApi';\r\n        var me2ApiUrl = 'api/me2Api';\r\n        var cityNotificationsApiUrl = 'api/cityNotificationsApi';\r\n        var nationalityNotificationsApiUrl = 'api/nationalityNotificationsApi';\r\n        var feedbackApiUrl = 'api/feedbackApi';\r\n        var statisticsApiUrl = 'api/statisticsApi';\r\n\r\n        var jumbotronVideoUrlSetting = {};\r\n\r\n        var service = {\r\n            getServerUrl: getServerUrl,\r\n            addOrUpdateThing: addOrUpdateThing,\r\n            getThings: getThings,\r\n            getThing: getThing,\r\n            getSetting: getSetting,\r\n            getMostMe2Things: getMostMe2Things,\r\n            getFoundThings: getFoundThings,\r\n            searchThings: searchThings,\r\n            searchThingsCount: searchThingsCount,\r\n            searchThingsInGoogle: searchThingsInGoogle,\r\n            deleteThing: deleteThing,\r\n            getJumbotronVideoUrlSetting: getJumbotronVideoUrlSetting,\r\n            upVote: upVote,\r\n            downVote: downVote,\r\n            getFinding: getFinding,\r\n            addOrUpdateFinding: addOrUpdateFinding,\r\n            deleteFinding: deleteFinding,\r\n            getLocations: getLocations,\r\n            getLocation: getLocation,\r\n            searchLocations: searchLocations,\r\n            searchLocationsCount: searchLocationsCount,\r\n            searchNewLocation: searchNewLocation,\r\n            addOrUpdateLocation: addOrUpdateLocation,\r\n            deleteLocation: deleteLocation,\r\n            getCategory: getCategory,\r\n            getCategories: getCategories,\r\n            searchCategories: searchCategories,\r\n            searchCategoriesCount: searchCategoriesCount,\r\n            addOrUpdateCategory: addOrUpdateCategory,\r\n            deleteCategory: deleteCategory,\r\n            getCity: getCity,\r\n            getCities: getCities,\r\n            searchCities: searchCities,\r\n            searchCitiesCount: searchCitiesCount,\r\n            addOrUpdateCity: addOrUpdateCity,\r\n            deleteCity: deleteCity,\r\n            getUser: getUser,\r\n            getUsers: getUsers,\r\n            searchUsers: searchUsers,\r\n            searchUsersCount: searchUsersCount,\r\n            addOrUpdateUser: addOrUpdateUser,\r\n            deleteUser: deleteUser,\r\n            getNationality: getNationality,\r\n            getNationalities: getNationalities,\r\n            searchNationalities: searchNationalities,\r\n            searchNationalitiesCount: searchNationalitiesCount,\r\n            addOrUpdateNationality: addOrUpdateNationality,\r\n            deleteNationality: deleteNationality,\r\n            syncUsers: syncUsers,\r\n            addOrUpdateMe2: addOrUpdateMe2,\r\n            getNewsletter: getNewsletter,\r\n            getNewsletters: getNewsletters,\r\n            searchNewsletters: searchNewsletters,\r\n            searchNewslettersCount: searchNewslettersCount,\r\n            addOrUpdateNewsletter: addOrUpdateNewsletter,\r\n            deleteNewsletter: deleteNewsletter,\r\n            sendNewsletter: sendNewsletter,\r\n            getNationalityNotification: getNationalityNotification,\r\n            getNationalityNotifications: getNationalityNotifications,\r\n            searchNationalityNotifications: searchNationalityNotifications,\r\n            searchNationalityNotificationsCount: searchNationalityNotificationsCount,\r\n            addOrUpdateNationalityNotification: addOrUpdateNationalityNotification,\r\n            deleteNationalityNotification: deleteNationalityNotification,\r\n            sendNationalityNotification: sendNationalityNotification,\r\n            getCityNotification: getCityNotification,\r\n            getCityNotifications: getCityNotifications,\r\n            searchCityNotifications: searchCityNotifications,\r\n            searchCityNotificationsCount: searchCityNotificationsCount,\r\n            addOrUpdateCityNotification: addOrUpdateCityNotification,\r\n            deleteCityNotification: deleteCityNotification,\r\n            sendCityNotification: sendCityNotification,\r\n            sendFeedback: sendFeedback,\r\n            getLoggedInUser: getLoggedInUser,\r\n            getNewThingsInPastWeekCount: getNewThingsInPastWeekCount,\r\n            getNewFindingsInPastWeekCount: getNewFindingsInPastWeekCount,\r\n            getTotalUsersCount: getTotalUsersCount,\r\n            getNewMe2sInPastWeekCount: getNewMe2sInPastWeekCount,\r\n            deleteImage: deleteImage\r\n        };\r\n\r\n        return service;\r\n\r\n        function getTotalUsersCount() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + statisticsApiUrl + '/getTotalUsersCount')\r\n                            .then(getTotalUsersCountComplete)\r\n                            .catch(getTotalUsersCountFailed);\r\n\r\n                function getTotalUsersCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getTotalUsersCountFailed(error) {\r\n                    $log.error('XHR failed for getTotalUsersCountFailed.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getNewFindingsInPastWeekCount() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + statisticsApiUrl + '/getNewFindingsInPastWeekCount')\r\n                            .then(getNewFindingsInPastWeekCountComplete)\r\n                            .catch(getNewFindingsInPastWeekCountFailed);\r\n\r\n                function getNewFindingsInPastWeekCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getNewFindingsInPastWeekCountFailed(error) {\r\n                    $log.error('XHR failed for getNewFindingsInPastWeekCountFailed.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getNewThingsInPastWeekCount() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + statisticsApiUrl + '/getNewThingsInPastWeekCount')\r\n                            .then(getNewThingsInPastWeekCountComplete)\r\n                            .catch(getNewThingsInPastWeekCountFailed);\r\n\r\n                function getNewThingsInPastWeekCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getNewThingsInPastWeekCountFailed(error) {\r\n                    $log.error('XHR failed for getNewThingsInPastWeekCountFailed.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getNewMe2sInPastWeekCount() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + statisticsApiUrl + '/getNewMe2sInPastWeekCount')\r\n                            .then(getNewMe2sInPastWeekCountComplete)\r\n                            .catch(getNewMe2sInPastWeekCountFailed);\r\n\r\n                function getNewMe2sInPastWeekCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getNewMe2sInPastWeekCountFailed(error) {\r\n                    $log.error('XHR failed for getNewMe2sInPastWeekCountFailed.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getLoggedInUser() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + usersApiUrl + '/getloggedinuser', { cache: true })\r\n                            .then(getLoggedInUserComplete)\r\n                            .catch(getLoggedInUserFailed);\r\n\r\n                function getLoggedInUserComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getLoggedInUserFailed(error) {\r\n                    $log.error('XHR failed for getLoggedInUserFailed.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function sendFeedback(feedback) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + feedbackApiUrl + '/sendfeedback', feedback)\r\n                            .then(sendFeedbackComplete)\r\n                            .catch(sendFeedbackFailed);\r\n\r\n                function sendFeedbackComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function sendFeedbackFailed(error) {\r\n                    $log.error('XHR failed for sendFeedbackFailed.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getCityNotification(cityNotificationId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + cityNotificationsApiUrl + '/' + cityNotificationId)\r\n                            .then(getCityNotificationComplete)\r\n                            .catch(getCityNotificationFailed);\r\n\r\n                function getCityNotificationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getCityNotificationFailed(error) {\r\n                    $log.error('XHR failed for getCityNotification.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function sendCityNotification(cityNotification) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + cityNotificationsApiUrl + '/send', cityNotification)\r\n                            .then(sendCityNotificationsComplete)\r\n                            .catch(sendCityNotificationsFailed);\r\n\r\n                function sendCityNotificationsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function sendCityNotificationsFailed(error) {\r\n                    $log.error('XHR failed for getCityNotifications.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getCityNotifications() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + cityNotificationsApiUrl)\r\n                            .then(getCityNotificationsComplete)\r\n                            .catch(getCityNotificationsFailed);\r\n\r\n                function getCityNotificationsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getCityNotificationsFailed(error) {\r\n                    $log.error('XHR failed for getCityNotifications.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchCityNotifications(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + cityNotificationsApiUrl + '/search', { params: searchCriteria, cache: true })\r\n                            .then(searchCityNotificationsComplete)\r\n                            .catch(searchCityNotificationsFailed);\r\n\r\n                function searchCityNotificationsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchCityNotificationsFailed(error) {\r\n                    $log.error('XHR failed for searchCityNotifications.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchCityNotificationsCount(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + cityNotificationsApiUrl + '/search/count', { params: searchCriteria, cache: true })\r\n                            .then(searchCityNotificationsCountComplete)\r\n                            .catch(searchCityNotificationsCountFailed);\r\n\r\n                function searchCityNotificationsCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchCityNotificationsCountFailed(error) {\r\n                    $log.error('XHR failed for searchCityNotifications.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateCityNotification(cityNotification) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + cityNotificationsApiUrl, cityNotification)\r\n                            .then(addOrUpdateCityNotificationComplete)\r\n                            .catch(addOrUpdateCityNotificationFailed);\r\n\r\n                function addOrUpdateCityNotificationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateCityNotificationFailed(error) {\r\n                    $log.error('XHR failed for saveCityNotification.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteCityNotification(cityNotificationId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + cityNotificationsApiUrl + '/' + cityNotificationId)\r\n                            .then(deleteCityNotificationComplete)\r\n                            .catch(deleteCityNotificationFailed);\r\n\r\n                function deleteCityNotificationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteCityNotificationFailed(error) {\r\n                    $log.error('XHR failed for deleteCityNotification.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getNationalityNotification(nationalityNotificationId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + nationalityNotificationsApiUrl + '/' + nationalityNotificationId)\r\n                            .then(getNationalityNotificationComplete)\r\n                            .catch(getNationalityNotificationFailed);\r\n\r\n                function getNationalityNotificationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getNationalityNotificationFailed(error) {\r\n                    $log.error('XHR failed for getNationalityNotification.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function sendNationalityNotification(nationalityNotification) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + nationalityNotificationsApiUrl + '/send', nationalityNotification)\r\n                            .then(sendNationalityNotificationsComplete)\r\n                            .catch(sendNationalityNotificationsFailed);\r\n\r\n                function sendNationalityNotificationsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function sendNationalityNotificationsFailed(error) {\r\n                    $log.error('XHR failed for getNationalityNotifications.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getNationalityNotifications() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + nationalityNotificationsApiUrl)\r\n                            .then(getNationalityNotificationsComplete)\r\n                            .catch(getNationalityNotificationsFailed);\r\n\r\n                function getNationalityNotificationsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getNationalityNotificationsFailed(error) {\r\n                    $log.error('XHR failed for getNationalityNotifications.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchNationalityNotifications(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + nationalityNotificationsApiUrl + '/search', { params: searchCriteria, cache: true })\r\n                            .then(searchNationalityNotificationsComplete)\r\n                            .catch(searchNationalityNotificationsFailed);\r\n\r\n                function searchNationalityNotificationsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchNationalityNotificationsFailed(error) {\r\n                    $log.error('XHR failed for searchNationalityNotifications.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchNationalityNotificationsCount(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + nationalityNotificationsApiUrl + '/search/count', { params: searchCriteria, cache: true })\r\n                            .then(searchNationalityNotificationsCountComplete)\r\n                            .catch(searchNationalityNotificationsCountFailed);\r\n\r\n                function searchNationalityNotificationsCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchNationalityNotificationsCountFailed(error) {\r\n                    $log.error('XHR failed for searchNationalityNotifications.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateNationalityNotification(nationalityNotification) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + nationalityNotificationsApiUrl, nationalityNotification)\r\n                            .then(addOrUpdateNationalityNotificationComplete)\r\n                            .catch(addOrUpdateNationalityNotificationFailed);\r\n\r\n                function addOrUpdateNationalityNotificationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateNationalityNotificationFailed(error) {\r\n                    $log.error('XHR failed for saveNationalityNotification.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteNationalityNotification(nationalityNotificationId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + nationalityNotificationsApiUrl + '/' + nationalityNotificationId)\r\n                            .then(deleteNationalityNotificationComplete)\r\n                            .catch(deleteNationalityNotificationFailed);\r\n\r\n                function deleteNationalityNotificationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteNationalityNotificationFailed(error) {\r\n                    $log.error('XHR failed for deleteNationalityNotification.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateMe2(me2) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + me2ApiUrl, me2)\r\n                            .then(addOrUpdateMe2Complete)\r\n                            .catch(addOrUpdateMe2Failed);\r\n\r\n                function addOrUpdateMe2Complete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateMe2Failed(error) {\r\n                    $log.error('XHR failed for addOrUpdateMe2.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getCategory(categoryId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + categoriesApiUrl + '/' + categoryId)\r\n                            .then(getCategoryComplete)\r\n                            .catch(getCategoryFailed);\r\n\r\n                function getCategoryComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getCategoryFailed(error) {\r\n                    $log.error('XHR failed for getCategory.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getCategories() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + categoriesApiUrl)\r\n                            .then(getCategoriesComplete)\r\n                            .catch(getCategoriesFailed);\r\n\r\n                function getCategoriesComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getCategoriesFailed(error) {\r\n                    $log.error('XHR failed for getCategories.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchCategories(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + categoriesApiUrl + '/search', { params: searchCriteria, cache: true })\r\n                            .then(searchCategoriesComplete)\r\n                            .catch(searchCategoriesFailed);\r\n\r\n                function searchCategoriesComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchCategoriesFailed(error) {\r\n                    $log.error('XHR failed for searchCategories.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchCategoriesCount(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + categoriesApiUrl + '/search/count', { params: searchCriteria, cache: true })\r\n                            .then(searchCategoriesCountComplete)\r\n                            .catch(searchCategoriesCountFailed);\r\n\r\n                function searchCategoriesCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchCategoriesCountFailed(error) {\r\n                    $log.error('XHR failed for searchCategories.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateCategory(category) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + categoriesApiUrl, category)\r\n                            .then(addOrUpdateCategoryComplete)\r\n                            .catch(addOrUpdateCategoryFailed);\r\n\r\n                function addOrUpdateCategoryComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateCategoryFailed(error) {\r\n                    $log.error('XHR failed for saveCategory.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteCategory(categoryId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + categoriesApiUrl + '/' + categoryId)\r\n                            .then(deleteCategoryComplete)\r\n                            .catch(deleteCategoryFailed);\r\n\r\n                function deleteCategoryComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteCategoryFailed(error) {\r\n                    $log.error('XHR failed for deleteCategory.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getCity(cityId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + citiesApiUrl + '/' + cityId)\r\n                            .then(getCityComplete)\r\n                            .catch(getCityFailed);\r\n\r\n                function getCityComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getCityFailed(error) {\r\n                    $log.error('XHR failed for getCity.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getCities() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + citiesApiUrl, { cache: true })\r\n                            .then(getCitiesComplete)\r\n                            .catch(getCitiesFailed);\r\n\r\n                function getCitiesComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getCitiesFailed(error) {\r\n                    $log.error('XHR failed for getCities.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchCities(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + citiesApiUrl + '/search', { params: searchCriteria, cache: true })\r\n                            .then(searchCitiesComplete)\r\n                            .catch(searchCitiesFailed);\r\n\r\n                function searchCitiesComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchCitiesFailed(error) {\r\n                    $log.error('XHR failed for searchCities.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchCitiesCount(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + citiesApiUrl + '/search/count', { params: searchCriteria, cache: true })\r\n                            .then(searchCitiesCountComplete)\r\n                            .catch(searchCitiesCountFailed);\r\n\r\n                function searchCitiesCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchCitiesCountFailed(error) {\r\n                    $log.error('XHR failed for searchCities.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateCity(city) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + citiesApiUrl, city)\r\n                            .then(addOrUpdateCityComplete)\r\n                            .catch(addOrUpdateCityFailed);\r\n\r\n                function addOrUpdateCityComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateCityFailed(error) {\r\n                    $log.error('XHR failed for saveCity.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteCity(cityId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + citiesApiUrl + '/' + cityId)\r\n                            .then(deleteCityComplete)\r\n                            .catch(deleteCityFailed);\r\n\r\n                function deleteCityComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteCityFailed(error) {\r\n                    $log.error('XHR failed for deleteCity.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getUser(userId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + usersApiUrl + '/' + userId)\r\n                            .then(getUserComplete)\r\n                            .catch(getUserFailed);\r\n\r\n                function getUserComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getUserFailed(error) {\r\n                    $log.error('XHR failed for getUser.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getUsers() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + usersApiUrl)\r\n                            .then(getUsersComplete)\r\n                            .catch(getUsersFailed);\r\n\r\n                function getUsersComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getUsersFailed(error) {\r\n                    $log.error('XHR failed for getUsers.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchUsers(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + usersApiUrl + '/search', { params: searchCriteria, cache: true })\r\n                            .then(searchUsersComplete)\r\n                            .catch(searchUsersFailed);\r\n\r\n                function searchUsersComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchUsersFailed(error) {\r\n                    $log.error('XHR failed for searchUsers.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchUsersCount(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + usersApiUrl + '/search/count', { params: searchCriteria, cache: true })\r\n                            .then(searchUsersCountComplete)\r\n                            .catch(searchUsersCountFailed);\r\n\r\n                function searchUsersCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchUsersCountFailed(error) {\r\n                    $log.error('XHR failed for searchUsers.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateUser(user) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + usersApiUrl, user)\r\n                            .then(addOrUpdateUserComplete)\r\n                            .catch(addOrUpdateUserFailed);\r\n\r\n                function addOrUpdateUserComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateUserFailed(error) {\r\n                    $log.error('XHR failed for saveUser.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteUser(userId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + usersApiUrl + '/' + userId)\r\n                            .then(deleteUserComplete)\r\n                            .catch(deleteUserFailed);\r\n\r\n                function deleteUserComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteUserFailed(error) {\r\n                    $log.error('XHR failed for deleteUser.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function syncUsers() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + usersApiUrl + '/syncUsers')\r\n                            .then(syncUsersComplete)\r\n                            .catch(syncUsersFailed);\r\n\r\n                function syncUsersComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function syncUsersFailed(error) {\r\n                    $log.error('XHR failed for deleteUser.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getNationality(nationalityId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + nationalitiesApiUrl + '/' + nationalityId)\r\n                            .then(getNationalityComplete)\r\n                            .catch(getNationalityFailed);\r\n\r\n                function getNationalityComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getNationalityFailed(error) {\r\n                    $log.error('XHR failed for getNationality.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getNationalities() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + nationalitiesApiUrl)\r\n                            .then(getNationalitiesComplete)\r\n                            .catch(getNationalitiesFailed);\r\n\r\n                function getNationalitiesComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getNationalitiesFailed(error) {\r\n                    $log.error('XHR failed for getNationalities.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchNationalities(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + nationalitiesApiUrl + '/search', { params: searchCriteria, cache: true })\r\n                            .then(searchNationalitiesComplete)\r\n                            .catch(searchNationalitiesFailed);\r\n\r\n                function searchNationalitiesComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchNationalitiesFailed(error) {\r\n                    $log.error('XHR failed for searchNationalities.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchNationalitiesCount(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + nationalitiesApiUrl + '/search/count', { params: searchCriteria, cache: true })\r\n                            .then(searchNationalitiesCountComplete)\r\n                            .catch(searchNationalitiesCountFailed);\r\n\r\n                function searchNationalitiesCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchNationalitiesCountFailed(error) {\r\n                    $log.error('XHR failed for searchNationalities.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateNationality(nationality) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + nationalitiesApiUrl, nationality)\r\n                            .then(addOrUpdateNationalityComplete)\r\n                            .catch(addOrUpdateNationalityFailed);\r\n\r\n                function addOrUpdateNationalityComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateNationalityFailed(error) {\r\n                    $log.error('XHR failed for saveNationality.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteNationality(nationalityId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + nationalitiesApiUrl + '/' + nationalityId)\r\n                            .then(deleteNationalityComplete)\r\n                            .catch(deleteNationalityFailed);\r\n\r\n                function deleteNationalityComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteNationalityFailed(error) {\r\n                    $log.error('XHR failed for deleteNationality.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getNewsletter(newsletterId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + newslettersApiUrl + '/' + newsletterId)\r\n                            .then(getNewsletterComplete)\r\n                            .catch(getNewsletterFailed);\r\n\r\n                function getNewsletterComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getNewsletterFailed(error) {\r\n                    $log.error('XHR failed for getNewsletter.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function sendNewsletter(newsletter) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + newslettersApiUrl + '/send', newsletter)\r\n                            .then(sendNewslettersComplete)\r\n                            .catch(sendNewslettersFailed);\r\n\r\n                function sendNewslettersComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function sendNewslettersFailed(error) {\r\n                    $log.error('XHR failed for getNewsletters.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getNewsletters() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + newslettersApiUrl)\r\n                            .then(getNewslettersComplete)\r\n                            .catch(getNewslettersFailed);\r\n\r\n                function getNewslettersComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getNewslettersFailed(error) {\r\n                    $log.error('XHR failed for getNewsletters.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchNewsletters(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + newslettersApiUrl + '/search', { params: searchCriteria, cache: true })\r\n                            .then(searchNewslettersComplete)\r\n                            .catch(searchNewslettersFailed);\r\n\r\n                function searchNewslettersComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchNewslettersFailed(error) {\r\n                    $log.error('XHR failed for searchNewsletters.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchNewslettersCount(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + newslettersApiUrl + '/search/count', { params: searchCriteria, cache: true })\r\n                            .then(searchNewslettersCountComplete)\r\n                            .catch(searchNewslettersCountFailed);\r\n\r\n                function searchNewslettersCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchNewslettersCountFailed(error) {\r\n                    $log.error('XHR failed for searchNewsletters.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateNewsletter(newsletter) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + newslettersApiUrl, newsletter)\r\n                            .then(addOrUpdateNewsletterComplete)\r\n                            .catch(addOrUpdateNewsletterFailed);\r\n\r\n                function addOrUpdateNewsletterComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateNewsletterFailed(error) {\r\n                    $log.error('XHR failed for saveNewsletter.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteNewsletter(newsletterId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + newslettersApiUrl + '/' + newsletterId)\r\n                            .then(deleteNewsletterComplete)\r\n                            .catch(deleteNewsletterFailed);\r\n\r\n                function deleteNewsletterComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteNewsletterFailed(error) {\r\n                    $log.error('XHR failed for deleteNewsletter.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function upVote(vote) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + votesApiUrl + '/upVote', vote)\r\n                            .then(upVoteComplete)\r\n                            .catch(upvoteFailed);\r\n\r\n                function upVoteComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function upvoteFailed(error) {\r\n                    $log.error('XHR Failed for upVote.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function downVote(vote) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + votesApiUrl + '/downVote', vote)\r\n                            .then(downVoteComplete)\r\n                            .catch(downvoteFailed);\r\n\r\n                function downVoteComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function downvoteFailed(error) {\r\n                    $log.error('XHR Failed for downVote.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getServerUrl() {\r\n            $http.get('/api/bootstrapSettingsApi', { cache: true })\r\n                .success(function (response) {\r\n                    serverUrl.authenticationServerUrl = response.authenticationServerUrl;\r\n                    serverUrl.resourceServerUrl = response.resourceServerUrl;\r\n\r\n                    deferred.resolve(response);\r\n                })\r\n            .error(function (response, status, headers, config) {\r\n                deferred.reject(\"Error: request returned status \" + status);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function getJumbotronVideoUrlSetting() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n                return $http.get(serverUrl.resourceServerUrl + 'api/settingsApi' + '/getJumbotronVideoUrlSetting', { cache: true })\r\n                            .then(getJumbotronVideoUrlSettingComplete)\r\n                            .catch(getJumbotronVideoUrlSettingFailed);\r\n\r\n                function getJumbotronVideoUrlSettingComplete(response) {\r\n                    jumbotronVideoUrlSetting = response.data;\r\n\r\n                    return response.data;\r\n                }\r\n\r\n                function getJumbotronVideoUrlSettingFailed(error) {\r\n                    $log.error('XHR Failed for getJumbotronVideoUrlSetting.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchThings(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + thingsApiUrl + '/search', { params: searchCriteria, cache: true })\r\n                            .then(searchThingsComplete)\r\n                            .catch(searchThingsFailed);\r\n\r\n                function searchThingsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchThingsFailed(error) {\r\n                    $log.error('XHR failed for searchThings.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchThingsCount(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + thingsApiUrl + '/search/count', { params: searchCriteria, cache: true })\r\n                            .then(searchThingsCountComplete)\r\n                            .catch(searchThingsCountFailed);\r\n\r\n                function searchThingsCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchThingsCountFailed(error) {\r\n                    $log.error('XHR failed for searchThings.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchThingsInGoogle(searchText) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + thingsApiUrl + '/searchThingsInGoogle/' + searchText)\r\n                            .then(searchThingsInGoogleComplete)\r\n                            .catch(searchThingsInGoogleFailed);\r\n\r\n                function searchThingsInGoogleComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchThingsInGoogleFailed(error) {\r\n                    $log.error('XHR failed for searchThingsInGoogle.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getLocations() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + 'api/locationsApi')\r\n                            .then(getLocationsComplete)\r\n                            .catch(getLocationsFailed);\r\n\r\n                function getLocationsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getLocationsFailed(error) {\r\n                    $log.error('XHR failed for getLocations.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getLocation(locationId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + locationsApiUrl + '/' + locationId)\r\n                            .then(getLocationComplete)\r\n                            .catch(getLocationFailed);\r\n\r\n                function getLocationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getLocationFailed(error) {\r\n                    $log.error('XHR failed for getLocation.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchLocations(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + locationsApiUrl + '/search', { params: searchCriteria, cache: true })\r\n                            .then(searchLocationsComplete)\r\n                            .catch(searchLocationsFailed);\r\n\r\n                function searchLocationsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchLocationsFailed(error) {\r\n                    $log.error('XHR failed for searchLocations.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchLocationsCount(searchCriteria) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + locationsApiUrl + '/search/count', { params: searchCriteria, cache: true })\r\n                            .then(searchLocationsCountComplete)\r\n                            .catch(searchLocationsCountFailed);\r\n\r\n                function searchLocationsCountComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchLocationsCountFailed(error) {\r\n                    $log.error('XHR failed for searchLocations.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function searchNewLocation(locationName, cityName) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + locationsApiUrl + '/searchNewLocation/' + cityName + '/' + locationName)\r\n                            .then(searchNewLocationComplete)\r\n                            .catch(searchNewLocationFailed);\r\n\r\n                function searchNewLocationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function searchNewLocationFailed(error) {\r\n                    $log.error('XHR failed for searchNewLocation.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateLocation(location) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + locationsApiUrl, location)\r\n                            .then(addOrUpdateLocationComplete)\r\n                            .catch(addOrUpdateLocationFailed);\r\n\r\n                function addOrUpdateLocationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateLocationFailed(error) {\r\n                    $log.error('XHR failed for saveLocation.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteLocation(locationId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + locationsApiUrl + '/' + locationId)\r\n                            .then(deleteLocationComplete)\r\n                            .catch(deleteLocationFailed);\r\n\r\n                function deleteLocationComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteLocationFailed(error) {\r\n                    $log.error('XHR failed for deleteLocation.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getFinding(findingId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + 'api/findingsApi' + '/' + findingId)\r\n                            .then(getFindingComplete)\r\n                            .catch(getFindingFailed);\r\n\r\n                function getFindingComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getFindingFailed(error) {\r\n                    $log.error('XHR failed for getFindings.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateFinding(finding) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + 'api/findingsApi', finding)\r\n                    .then(saveFindingComplete)\r\n                    .catch(saveFindingFailed);\r\n\r\n                function saveFindingComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function saveFindingFailed(error) {\r\n                    $log.error('XHR Failed for saveFinding.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteFinding(findingId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + 'api/findingsApi' + '/' + findingId)\r\n                            .then(deleteFindingComplete)\r\n                            .catch(deleteFindingFailed);\r\n\r\n                function deleteFindingComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteFindingFailed(error) {\r\n                    $log.error('XHR failed for deleteFinding.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getThings() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + thingsApiUrl)\r\n                            .then(getThingsComplete)\r\n                            .catch(getThingsFailed);\r\n\r\n                function getThingsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getThingsFailed(error) {\r\n                    $log.error('XHR Failed for getThings.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getThing(thingId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.get(serverUrl.resourceServerUrl + thingsApiUrl + '/' + thingId)\r\n                            .then(getThingComplete)\r\n                            .catch(getThingFailed);\r\n\r\n                function getThingComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getThingFailed(error) {\r\n                    $log.error('XHR Failed for getThing.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getFoundThings() {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n                return $http.get(serverUrl.resourceServerUrl + thingsApiUrl + '/getFoundThings')\r\n                            .then(getFoundThingsComplete)\r\n                            .catch(getFoundThingsFailed);\r\n\r\n                function getFoundThingsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getFoundThingsFailed(error) {\r\n                    $log.error('XHR Failed for getFoundThings.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getMostMe2Things(itemsPerPage) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n                return $http.get(serverUrl.resourceServerUrl + thingsApiUrl + '/getMostMe2Things/' + itemsPerPage, { cache: true })\r\n                            .then(getMostMe2ThingsComplete)\r\n                            .catch(getMostMe2ThingsFailed);\r\n\r\n                function getMostMe2ThingsComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getMostMe2ThingsFailed(error) {\r\n                    $log.error('XHR Failed for getMostMe2Things.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateThing(thing) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + thingsApiUrl, thing)\r\n                    .then(saveThingComplete)\r\n                    .catch(saveThingFailed);\r\n\r\n                function saveThingComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function saveThingFailed(error) {\r\n                    $log.error('XHR Failed for saveThing.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteThing(thingId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + thingsApiUrl + '/' + thingId)\r\n                    .then(deleteThingComplete)\r\n                    .catch(deleteThingFailed);\r\n\r\n                function deleteThingComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteThingFailed(error) {\r\n                    $log.error('XHR Failed for deleteThing.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function getSetting(settingKey) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n                return $http.get(serverUrl.resourceServerUrl + 'api/settingsApi/' + settingKey)\r\n                            .then(getSettingComplete)\r\n                            .catch(getSettingFailed);\r\n\r\n                function getSettingComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function getSettingFailed(error) {\r\n                    $log.error('XHR Failed for getSetting.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function addOrUpdateSetting(setting) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.post(serverUrl.resourceServerUrl + 'api/settingsApi', setting)\r\n                            .then(addOrUpdateSettingComplete)\r\n                            .catch(addOrUpdateSettingFailed);\r\n\r\n                function addOrUpdateSettingComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function addOrUpdateSettingFailed(error) {\r\n                    $log.error('XHR Failed for addOrUpdateSetting.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteImage(imageId) {\r\n            return getServerUrl().then(function (resource) {\r\n                serverUrl = resource;\r\n\r\n                return $http.delete(serverUrl.resourceServerUrl + 'api/imagesApi/' + imageId)\r\n                            .then(deleteImageComplete)\r\n                            .catch(deleteImageFailed);\r\n\r\n                function deleteImageComplete(response) {\r\n                    return response.data;\r\n                }\r\n\r\n                function deleteImageFailed(error) {\r\n                    $log.error('XHR failed for deleteImage.' + error.data.message + ': ' + (error.data.messageDetail || error.data.exceptionMessage));\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();"],"file":"dataService.js","sourceRoot":"/source/"}