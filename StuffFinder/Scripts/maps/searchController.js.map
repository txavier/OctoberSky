{"version":3,"names":[],"mappings":"","sources":["searchController.js"],"sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    app.controller('searchController', searchController);\r\n\r\n    searchController.$inject = ['$scope', '$location', '$log', '$timeout', '$routeParams', 'authService', 'dataService',\r\n        'me2Service', 'toaster', 'thingService'];\r\n\r\n    function searchController($scope, $location, $log, $timeout, $routeParams, authService, dataService, me2Service, toaster,\r\n        thingService) {\r\n\r\n        var vm = this;\r\n        \r\n        vm.things = [];\r\n        vm.query = $routeParams.query;\r\n        vm.cityName = $routeParams.cityName;\r\n        vm.jumbotronVideoUrlSetting = {};\r\n        vm.dataProperty = '';\r\n        vm.upVote = upVote;\r\n        vm.downVote = downVote;\r\n        vm.redBoxShadow = '0 0 1em rgb(148,62,15)';\r\n        vm.redFont = 'rgb(148,62,15)';\r\n        vm.greenBoxShadow = '0 0 1em rgb(57,118,40)';\r\n        vm.greenFont = 'rgb(57,118,40)';\r\n        vm.totalItems = 0;\r\n        vm.totalItemsInAllCities = 0;\r\n        vm.itemsPerPage = 10;\r\n        vm.currentPage = 1;\r\n        vm.pageChanged = pageChanged;\r\n        vm.setSortOrder = setSortOrder;\r\n        vm.orderBy = null;\r\n        vm.searchText = null;\r\n        vm.searchCriteria = {};\r\n        vm.searchCriteria.searchText = null;\r\n        vm.me2 = me2;\r\n        vm.loggedInUser = {};\r\n        vm.googleThings = [];\r\n        vm.whereIsGoogleThing = whereIsGoogleThing;\r\n        vm.foundThingAndLocationGoogleThing = foundThingAndLocationGoogleThing;\r\n        vm.videoId = 'TDM18lJ18VA';\r\n        vm.videos = [{\r\n            videoId: 'TDM18lJ18VA',\r\n            mute: false\r\n        },{\r\n            videoId: 'TDM18lJ18VA',\r\n            start: 10,\r\n            end: 50\r\n        }];\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            setSearchCriteria(vm.currentPage, vm.itemsPerPage, vm.orderBy, vm.query, vm.cityName);\r\n            searchThings(vm.searchCriteria);\r\n            searchThingsCount(vm.searchCriteria);\r\n            searchAllThingsCount(vm.searchCriteria);\r\n            \r\n            if (authService.authentication.userName) {\r\n                getLoggedInUser();\r\n            }\r\n\r\n            return vm;\r\n        }\r\n\r\n        function getLoggedInUser() {\r\n            return dataService.getLoggedInUser().then(function (data) {\r\n                vm.loggedInUser = data;\r\n\r\n                return vm.loggedInUser;\r\n            });\r\n        }\r\n\r\n        function me2(thingId) {\r\n            getLoggedInUser().then(function (data) {\r\n                if (vm.loggedInUser) {\r\n                    toaster.pop('success', 'Done', 'You want it? You got it.  An email will be sent to you when this item is found in your city!');\r\n\r\n                    return me2Service.me2(thingId).then(function (data) {\r\n                        searchThings(vm.searchCriteria);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        // This overloaded message handles me2's for things that dont yet exist.  This method will persist all the objects\r\n        // to the database.\r\n        function me2(thing) {\r\n            getLoggedInUser().then(function (data) {\r\n                if (vm.loggedInUser) {\r\n                    toaster.pop('success', 'Done', 'You want it? You got it.  An email will be sent to you when this item is found in your city!');\r\n\r\n                    return me2Service.me2(thing).then(function (data) {\r\n                        searchThings(vm.searchCriteria);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        function whereIsGoogleThing(thing) {\r\n            thingService.setThing(thing);\r\n\r\n            $location.path('/where-is-it');\r\n        }\r\n\r\n        function foundThingAndLocationGoogleThing(thing) {\r\n            thingService.setThing(thing);\r\n\r\n            $location.path('/found-thing-and-location');\r\n        }\r\n\r\n        function searchThings(searchCriteria) {\r\n            dataService.searchThings(searchCriteria).then(function (data) {\r\n                vm.things = vm.things.concat(data);\r\n\r\n                return vm.things;\r\n            });\r\n        }\r\n\r\n        function searchThingsCount(searchCriteria) {\r\n            return dataService.searchThingsCount(searchCriteria).then(function (data) {\r\n                vm.totalItems = data || 0;\r\n\r\n                if (vm.totalItems < 5) {\r\n                    searchThingsInGoogle(searchCriteria.searchText);\r\n                }\r\n\r\n                return vm.totalItems;\r\n            });\r\n        }\r\n\r\n        function searchThingsInGoogle(searchText) {\r\n            return dataService.searchThingsInGoogle(searchText).then(function (data) {\r\n                vm.googleThings = data;\r\n\r\n                return vm.googleThings;\r\n            });\r\n        }\r\n\r\n        function searchAllThingsCount(searchCriteria) {\r\n            for (var i = 0; i < searchCriteria.searchParams.length; i++) {\r\n                if (searchCriteria.searchParams[i].key === 'cityName'\r\n                    && searchCriteria.searchParams[i].value\r\n                    && searchCriteria.searchParams[i].value.toLowerCase() != 'all') {\r\n                    var allSearchCriteria =\r\n                        createSearchCriteria(searchCriteria.currentPage, searchCriteria.itemsPerPage, searchCriteria.orderBy, searchCriteria.searchText, 'all');\r\n\r\n                    return dataService.searchThingsCount(allSearchCriteria).then(function (data) {\r\n                        vm.totalItemsInAllCities = data || 0;\r\n\r\n                        return vm.totalItemsInAllCities;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        \r\n        function createSearchCriteria(currentPage, itemsPerPage, orderBy, searchText, cityName) {\r\n            var searchCriteria = {};\r\n\r\n            var searchParams = [\r\n                {\r\n                    key: \"cityName\",\r\n                    value: cityName\r\n                }\r\n            ];\r\n\r\n            searchCriteria = {\r\n                currentPage: currentPage,\r\n                itemsPerPage: itemsPerPage,\r\n                orderBy: orderBy,\r\n                searchText: searchText,\r\n                searchParams: searchParams\r\n            }\r\n\r\n            return searchCriteria;\r\n        }\r\n\r\n        function setSearchCriteria(currentPage, itemsPerPage, orderBy, searchText, cityName) {\r\n            vm.searchCriteria = createSearchCriteria(currentPage, itemsPerPage, orderBy, searchText, cityName);\r\n\r\n            return vm.searchCriteria;\r\n        }\r\n\r\n        function pageChanged() {\r\n            vm.currentPage++;\r\n\r\n            setSearchCriteria(vm.currentPage, vm.itemsPerPage, vm.orderBy, vm.searchCriteria.searchText, vm.cityName);\r\n\r\n            searchThings(vm.searchCriteria);\r\n        }\r\n\r\n        function setSortOrder(orderBy) {\r\n            vm.orderBy = orderBy;\r\n\r\n            setSearchCriteria(vm.currentPage, vm.itemsPerPage, vm.orderBy, vm.searchText);\r\n\r\n            searchThings(vm.searchCriteria);\r\n        }\r\n\r\n        function upVote(thing) {\r\n            var vote = {};\r\n\r\n            vote.userName = authService.authentication.userName;\r\n            vote.thingId = thing.thingId;\r\n\r\n            return dataService.upVote(vote).then(function (data) {\r\n                searchThings();\r\n            });\r\n        }\r\n\r\n        function downVote(thing) {\r\n            var vote = {};\r\n\r\n            vote.userName = authService.authentication.userName;\r\n            vote.thingId = thing.thingId;\r\n\r\n            return dataService.downVote(vote).then(function (data) {\r\n                searchThings();\r\n            });\r\n        }\r\n    }\r\n\r\n})();"],"file":"searchController.js","sourceRoot":"/source/"}